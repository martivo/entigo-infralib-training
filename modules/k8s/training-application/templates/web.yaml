apiVersion: v1
kind: Service
metadata:
  name: web
  labels:
    category: application
spec:
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector:
    app: web
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/group.name: external
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS":443}]'
spec:
  ingressClassName: alb
  rules:
  - host: {{ .Values.ingress.hostname }}
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: web
            port: 
              number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: web
    category: application
  name: web
spec:
  replicas: {{ .Values.web.replicaCount }}
  selector:
    matchLabels:
      app: web
  template:
    metadata:
      labels:
        app: web
        svc: web
        category: application
    spec:
      containers:
      - image: {{ .Values.image.repository }}{{ .Values.web.image }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: nodejs
        resources:
          requests:
            memory: 32Mi
            cpu: 10m
          limits:
            memory: 128Mi
            cpu: 2000m
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 5
      terminationGracePeriodSeconds: 5 
