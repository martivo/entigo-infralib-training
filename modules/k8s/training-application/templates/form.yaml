apiVersion: v1
kind: Service
metadata:
  name: form
  labels:
    category: application
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 3002
  selector:
    app: form
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: form
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/group.name: external
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS":443}]'
spec:
  ingressClassName: alb
  rules:
  - host: {{ .Values.ingress.hostname }}
    http:
      paths:
      - path: /form
        pathType: Prefix
        backend:
          service:
            name: form
            port: 
              number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: form
  labels:
    app: form
    category: application
spec:
  replicas: {{ .Values.form.replicaCount }}
  selector:
    matchLabels:
      app: form
  template:
    metadata:
      labels:
        app: form
        category: application
    spec:
      terminationGracePeriodSeconds: 3
      restartPolicy: Always
      containers:
      - name: form
        image: {{ .Values.image.repository }}{{ .Values.form.image }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: [ "java" ]
        args: [ "-jar", "/app/form-handler.jar" ]
        readinessProbe:
          tcpSocket:
            port: 3002
          initialDelaySeconds: 2
          timeoutSeconds: 15
          periodSeconds: 5
        livenessProbe:
          tcpSocket:
            port: 3002
          initialDelaySeconds: 60
          timeoutSeconds: 60
          periodSeconds: 30
        resources:
          requests:
            memory: 256Mi
            cpu: 50m
          limits:
            memory: 512Mi
            cpu: 2000m
        envFrom:
          - configMapRef:
              name: conf
          - secretRef:
              name: db
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - containerPort: 3002 
