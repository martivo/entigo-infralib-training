apiVersion: v1
kind: Service
metadata:
  labels:
    app: api
    category: application
  name: api
spec:
  ports:
  - port: 80
    targetPort: 3001
  selector:
    app: api
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: api
  annotations:
    ingress.kubernetes.io/ssl-redirect: "false"
    alb.ingress.kubernetes.io/backend-protocol: HTTP
    alb.ingress.kubernetes.io/group.name: external
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80,"HTTPS":443}]'
spec:
  ingressClassName: alb
  rules:
  - host: {{ .Values.ingress.hostname }}
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: api
            port: 
              number: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: api
    category: application
  name: api
spec:
  replicas: {{ .Values.api.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
        category: application
    spec:
      containers:
      - image: {{ .Values.image.repository }}{{ .Values.api.image }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: nodejs
        resources:
          limits:
            cpu: 1000m
            memory: 128Mi
            ephemeral-storage: 1Gi
          requests:
            cpu: 10m
            memory: 32Mi
            ephemeral-storage: 100Mi
        livenessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 10
          periodSeconds: 30
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 3001
          initialDelaySeconds: 2
          periodSeconds: 3
        envFrom:
        - configMapRef:
            name: api-conf
        - secretRef:
            name: api-secrets
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: api-redis
              key: redis-password
      restartPolicy: Always
      terminationGracePeriodSeconds: 20 
