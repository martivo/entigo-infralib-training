kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .Release.Name }}
spec:
  storageClassName: gp3-no-retain
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: {{ .Release.Name }}-etc
spec:
  storageClassName: gp3-no-retain
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  serviceName: "{{ .Release.Name }}"
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
    spec:
      terminationGracePeriodSeconds: 10
      hostname: {{ .Values.hostname }}
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 90
            preference:
              matchExpressions:
              - key: tools
                operator: In
                values:
                - "true"
      tolerations:
        - key: "tools"
          operator: "Equal"
          value: "true"
          effect: "NoSchedule"
      containers:
      - name: {{ .Release.Name }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        image: {{ .Release.Name }}/{{ .Release.Name }}-ce:17.3.4-ce.0
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        env:
        - name: GITLAB_OMNIBUS_CONFIG
          value: |
            external_url 'https://{{ .Values.hostname }}'
            registry_external_url 'https://{{ .Values.registryhostname }}'
            registry['enable'] = true
            registry_nginx['listen_https'] = false
        ports:
        - containerPort: 80
          name: http
        - containerPort: 443
          name: https
        - containerPort: 22
          name: ssh
        volumeMounts:
        - mountPath: /etc/gitlab
          name: conf
        - mountPath: /var/opt/gitlab
          name: data
        - mountPath: /var/log/gitlab
          name: logs
      volumes:
       - name: data
         persistentVolumeClaim:
           claimName: {{ .Release.Name }}
       - name: conf
         persistentVolumeClaim:
           claimName: {{ .Release.Name }}-etc
       - name: logs
         emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: https
    port: 443
    protocol: TCP
    targetPort: 443
  selector:
    app: {{ .Release.Name }}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/backend-protocol: HTTPS
    alb.ingress.kubernetes.io/group.name: external
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":443},{"HTTP":80}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
  name: {{ .Release.Name }}
spec:
  ingressClassName: alb
  rules:
  - host: {{ .Values.hostname }}
    http:
      paths:
      - backend:
          service:
            name: {{ .Release.Name }}
            port:
              number: 443
        path: /
        pathType: Prefix
  - host: {{ .Values.registryhostname }}
    http:
      paths:
      - backend:
          service:
            name: {{ .Release.Name }}
            port:
              number: 443
        path: /
        pathType: Prefix
